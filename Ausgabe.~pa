unit Ausgabe;

interface
uses Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  StdCtrls, ExtCtrls, Menus, QCCom32;
procedure Ausgabe_lpt;
procedure Ausgabe_ser;
procedure screenausgabe;
procedure Faderupdate;
implementation
uses Lasersoftware,image,ausgabeeffekte;


Procedure Faderupdate;
var a:string;
begin
// Fader V rot / H / V aktualisieren
form1.sb8.position:=strtoint(form1.lb1.items[6]);
form1.panel13.caption:=inttostr(form1.sb8.position);
form1.sb9.position:=strtoint(form1.lb1.items[7]);
form1.panel14.caption:=inttostr(form1.sb9.position);
form1.sb6.position:=strtoint(form1.lb1.items[8]);
form1.panel9.caption:=inttostr(form1.sb6.position);

//Checkboxen aktualisieren
if copy(form1.lb1.items[4],1,1)='1' then form1.cb3.checked:=true else
form1.cb3.checked:=false;
if copy(form1.lb1.items[4],2,1)='1' then form1.cb4.checked:=true else
form1.cb4.checked:=false;
if copy(form1.lb1.items[4],3,1)='1' then form1.cb5.checked:=true else
form1.cb5.checked:=false;
if copy(form1.lb1.items[4],4,1)='1' then form1.cb33.checked:=true else
form1.cb33.checked:=false;

// BSW Bankswitchinfo ?
a:=copy(form1.lb1.items[9],1,3);
     if a <>'' then
      begin
       if a='1  ' then form1.bs1.checked:=true;
       if a='2  ' then form1.bs2.checked:=true;
       if a='4  ' then form1.bs3.checked:=true;
       if a='8  ' then form1.bs4.checked:=true;
       if a='16 ' then form1.bs5.checked:=true;
       if a='32 ' then form1.bs6.checked:=true;
       if a='64 ' then form1.bs7.checked:=true;
       if a='128' then form1.bs8.checked:=true;
       if a='0  ' then form1.bs9.checked:=true;
     end;

//SMT Schrittmotorwert ??
a:=copy(form1.lb1.items[9],8,2);
     if a='1 ' then form1.rb8.checked:=true;
     if a='2 ' then form1.rb9.checked:=true;
     if a='3 ' then form1.rb10.checked:=true;
     if a='4 ' then form1.rb11.checked:=true;
     if a='5 ' then form1.rb12.checked:=true;
     if a='6 ' then form1.rb13.checked:=true;
     if a='7 ' then form1.rb14.checked:=true;
     if a='8 ' then form1.rb15.checked:=true;
     if a='9 ' then form1.rb16.checked:=true;
     if a='10' then form1.rb17.checked:=true;
     if a='11' then form1.rb18.checked:=true;
     if a='12' then form1.rb19.checked:=true;
     if a='13' then form1.rb20.checked:=true;
     if a='14' then form1.rb21.checked:=true;
     if a='15' then form1.rb22.checked:=true;
     if a='16' then form1.rb23.checked:=true;
     if a='17' then form1.rb24.checked:=true;
     if a='18' then form1.rb25.checked:=true;
     if a='19' then form1.rb27.checked:=true;
     if a='20' then form1.rb28.checked:=true;


// Wert für Pump
form1.sb17.position:=strtoint(copy (form1.lb1.items[4],11,4));
form1.panel33.caption:=inttostr(form1.sb17.position);

// Max. Drehwinkel
form1.tb2.position:=strtoint(form1.lb1.items[10]);
form1.panel51.caption:=inttostr(form1.tb2.position);
winkel1max:=form1.tb2.position;
end;
// ENDE Faderupdate

// Ausgabe der Wiedergabe ins MAlfeld
procedure screenausgabe;
begin
 dcolor:=port;
 if dcolor=1 then form1.i1.canvas.pen.color:=clbtnface;
 if dcolor=2 then form1.i1.canvas.pen.color:=clred;
 if dcolor=4 then form1.i1.canvas.pen.color:=clgreen;
 if dcolor=8 then form1.i1.canvas.pen.color:=clblue;

 if punkte=0 then form1.i1.canvas.moveto(xneu,yneu) else
 form1.i1.canvas.lineto(xneu,yneu);
end;


// Ausgabe an LPT und Bankschalter
procedure Ausgabe_LPT;
var z,pprozeile,bnr:integer;teil:string;
var peb,ppeb:integer;
begin
peb:=0;ppeb:=0;
counter:=1; pprozeile:=0;
if Status=1 then
  begin
    peb:=round(length(form1.lb1.items[bildnr+20])/6);
    // Bildpunkte pro Zeile ermitteln für Schleife
    pprozeile:=round(length(form1.lb1.items[bildnr+20])/6)*form1.sb4.position;
    for z:=1 to pprozeile do
      begin
       if status=0 then exit;
       if z>1 then counter:=0;
       if form1.cb6.checked=true then counter:=1;

       // Sprung zu Ausgabeeffekte
       if dlzaehler>durchlaeufe then
        begin
          Rotationsrichtung;
          Winkel:=(winkel1*3.141592)/360;
          Drehwinkelumschaltung;
          Winkelberechnen;
          dlzaehler:=0;

        end;
        Datenauslbholen;
        pumpen;
        rotieren;application.ProcessMessages;
        spiegeln;application.ProcessMessages;
        begrenzung;application.ProcessMessages;
    
       //Screenausgabe  ??
       if form1.cb6.checked=false then
       begin
         if ppeb>punkte then counter:=0 else counter:=1;ppeb:=ppeb+1;
       end;
       if (form1.cb2.checked=true) and (punkte=0) and (counter=1) then
       image_loeschen_2;
       if (form1.cb2.checked=true) and (counter=1) then screenausgabe;
       Invertoderswap;application.ProcessMessages;
       gain;
       ausgabeseriell;application.ProcessMessages;
       if form1.cb38.checked=true then ausgabeparallelasm else ausgabeparallel;
       //Nächster Punkt, wenn keiner da wieder auf Zeilenanfang springen
       punkte:=punkte+1; DLzaehler:=dlzaehler+1;
       if copy(form1.lb1.items[bildnr+20],(punkte*6+1),2)=''then
       begin
        punkte:=0;

       end;
       application.ProcessMessages;
      end;

 end; // Ende Schleife für 1 Bild
   counter:=0;
   bnr:=0;teil:=''; bnr:=bildnr+21;
   teil:=copy (form1.lb1.items[bnr],(punkte*6),6);
     if teil <>'' then
       // Wenn Bild da in nächste Zeile Springen
       begin
         bildnr:=bildnr+1 ;
          form1.lpt.writeport(lptport+2,1);  //blanken
         counter:=1;
         application.ProcessMessages;
       end  else
       //Oder wieder in Zeile 20
       begin
         bildnr:=1;
         application.ProcessMessages;
       end;

 punkte:=0;
end;


// Serielle Ausgabe zum Aufruf beim Programmstart;
procedure Ausgabe_ser;
begin
 if status=0 then port:=1;
 form1.com.write(inttohex(port,2)+
                (inttohex(psw,2))+
                (inttohex(SMT,2)));
 form1.com.write(#13);
 form1.com.write(#13);
 form1.com.flush;
end;


end.
